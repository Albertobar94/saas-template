generator client {
  provider        = "prisma-client-js"
  // TODO: Check if the binaryTargets are required for Vercel
  // rhel-openssl-1.0.x is the binary target for Red Hat Enterprise Linux 8 required by Vercel
  // binaryTargets   = ["native", "rhel-openssl-1.0.x"]
  previewFeatures = ["driverAdapters"]
}

generator zod {
  provider = "zod-prisma"
  output   = "../src/zod"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum UserRole {
  User  @map("USER")
  Admin @map("ADMIN")
}

model User {
  id            String    @id @default(cuid())
  /// @zod.min(1) 
  name          String?
  /// @zod.email()
  email         String    @unique
  emailVerified DateTime?
  /// @zod.url()
  image         String?
  role          UserRole
  accounts      Account[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
}
